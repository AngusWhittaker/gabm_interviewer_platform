# Generated by Django 4.2.5 on 2024-01-21 07:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('completed_modules', models.TextField(blank=True, default='')),
                ('audio_calibration_float', models.FloatField(default=0.02)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sprite_sheet', models.ImageField(upload_to='UserAvatars/')),
                ('front_static', models.ImageField(upload_to='UserAvatars/')),
                ('front_gif', models.FileField(upload_to='UserAvatars/')),
                ('back_gif', models.FileField(upload_to='UserAvatars/')),
                ('left_gif', models.FileField(upload_to='UserAvatars/')),
                ('right_gif', models.FileField(upload_to='UserAvatars/')),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script_v', models.CharField(default='script_v1', max_length=255)),
                ('interviewer_summary', models.TextField(default='')),
                ('curr_module_id', models.IntegerField(default=1)),
                ('module_count', models.IntegerField(default=1)),
                ('question_id_count', models.IntegerField(default=1)),
                ('p_notes', models.TextField(default='')),
                ('optional_key_phrases', models.TextField(default='')),
                ('completed_sec', models.IntegerField(default=0)),
                ('completed_module_sec', models.IntegerField(default=0)),
                ('completed_question_sec', models.IntegerField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_id', models.IntegerField(default=1)),
                ('curr_question_id', models.IntegerField(default=1)),
                ('question_count', models.IntegerField(default=1)),
                ('completed', models.BooleanField(default=False)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.interview')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.IntegerField(default=1)),
                ('global_question_id', models.IntegerField(default=1)),
                ('q_content', models.TextField(default='')),
                ('q_type', models.CharField(max_length=255)),
                ('q_requirement', models.TextField(default='')),
                ('q_max_sec', models.IntegerField(default=1)),
                ('q_content_audio_ids', models.TextField(default='')),
                ('convo', models.TextField(default='')),
                ('completed', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.interview')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.interviewmodule')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewAudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_speech', models.BooleanField(default=False)),
                ('audio_file', models.FileField(upload_to='InterviewAudios/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.interviewquestion')),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='avatar',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.avatar'),
        ),
        migrations.AddField(
            model_name='participant',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='participant',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='interviewquestion',
            constraint=models.UniqueConstraint(fields=('question_id', 'interview', 'module'), name='unique_question_details'),
        ),
        migrations.AddConstraint(
            model_name='interviewmodule',
            constraint=models.UniqueConstraint(fields=('module_id', 'interview'), name='unique_module_details'),
        ),
        migrations.AlterUniqueTogether(
            name='interview',
            unique_together={('participant', 'script_v')},
        ),
    ]
